/*
 * This file is generated by jOOQ.
 */
package lv.twino.homework.jooq;


import javax.annotation.Generated;

import lv.twino.homework.jooq.tables.Blacklist;
import lv.twino.homework.jooq.tables.LoanRequisition;
import lv.twino.homework.jooq.tables.records.BlacklistRecord;
import lv.twino.homework.jooq.tables.records.LoanRequisitionRecord;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<LoanRequisitionRecord, Integer> IDENTITY_LOAN_REQUISITION = Identities0.IDENTITY_LOAN_REQUISITION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BlacklistRecord> CONSTRAINT_F = UniqueKeys0.CONSTRAINT_F;
    public static final UniqueKey<LoanRequisitionRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<LoanRequisitionRecord, Integer> IDENTITY_LOAN_REQUISITION = Internal.createIdentity(LoanRequisition.LOAN_REQUISITION, LoanRequisition.LOAN_REQUISITION.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<BlacklistRecord> CONSTRAINT_F = Internal.createUniqueKey(Blacklist.BLACKLIST, "CONSTRAINT_F", Blacklist.BLACKLIST.PERSONAL_ID);
        public static final UniqueKey<LoanRequisitionRecord> CONSTRAINT_2 = Internal.createUniqueKey(LoanRequisition.LOAN_REQUISITION, "CONSTRAINT_2", LoanRequisition.LOAN_REQUISITION.ID);
    }
}
